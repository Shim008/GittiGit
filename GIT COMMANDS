#Git CheetSheet:

Git Commands list and thier usage:

1. git config –global user.name	->     Set the username to be used for all actions
2. git config –global user.email ->    Set the email to be used for all the actions.
3. git config –global alias. ->	       Create a shortcut for the Git command.
4. git config –system core.editor ->   Set the text editor for all the command actions.
5. git config –global –edit ->	       Open global configuration file in the text editor for manual editing.
6. git config –global color.ui auto -> Enable helpful colourization of command line outputs.
7. git init ->	                       Initialize an empty Git repo in the current project.
8. git clone ->	                       Clone the repository from GitHub to the project folder.
9. git clone ->	                       Clone the repository into a specific folder.
10. git remote add origin ->           Create a remote repo pointing on your existing GitHub repository.
11. git remote ->	               Shows the name of remote repositories.
12. git remote ->	               Shows the name and the URL of the remote repositories.
13. git remote rm (remote repo name) -> Removes the remote repository.
14. git remote set-url origin (git URL) -> Changes the URL of the repository.
15. git fetch ->                       Get the latest changes from the origin but not merge.
16. git pull ->                        Get the latest changes from the origin and merge them.
17. git add (file name) -> 	       Add the current changes to the file to staging.
18. git commit -m “(message)” ->       Commits the changes with a custom message.
19. git commit -am “(message)” ->      Adds all changes to staging and commits them with a custom message.
20. git show ->	                       Outputs the metadata and content changes of the specified Commit.
21. git reset –hard ->	               Discard all the history and changes back to a given Commit.
22. git reset –hard Head ->	       Discards all local changes in the working directory.
23. git log	->                     Shows the history of changes.
24. git log -p	->                     Shows the full display of each Commit.
25. git push ->			       Push changes to the Origin.
26. git Commit	->                     This is a single point in Git history which holds the information about a changeset.
27. git Diff ->                        A Diff is the difference in changes between two Commits, or saved changes.
28. git	Fetch ->                       Fetching means to get latest changes in the branch and the local/remote repos.
29. git Fork ->                        By Forking the repository, you will be able to add Commits and create Pull Requests.
30. git	Hash ->                        A unique SHA1 code for every Commit
